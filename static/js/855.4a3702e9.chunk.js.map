{"version":3,"file":"static/js/855.4a3702e9.chunk.js","mappings":"kKAcA,IAVuB,SAACA,GAAD,OACrB,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAG,IAAR,UACE,SAAC,UAAD,OAEF,SAAC,IAAD,CAAKA,GAAG,IAAR,UACE,SAAC,IAAD,CAAUC,UAAW,CAAEC,KAAM,Y,mLC8DnC,UA7DwB,SAACH,GACvB,IAAMI,GAAcC,EAAAA,EAAAA,QAAO,MAC3B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAAWC,EAAAA,EAAAA,MAwBjB,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,2FACdN,GAAS,GADK,kBAGMO,EAAAA,EAAAA,eAA4BN,GAHlC,OAGNO,EAHM,OAIZV,EAAQU,EAAIX,KAAKA,MAEjBG,GAAS,GANG,gDAQZS,QAAQC,IAAR,MARY,yDAAH,qDAYb,OADAJ,IACO,WACLA,OAED,CAACL,KAEJI,EAAAA,EAAAA,YAAU,WACRM,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtCnB,EAAYqB,QAAQF,UAAY,IAC/B,CAACV,KAEF,UAAC,IAAD,YACE,SAAC,IAAD,CAAkBa,MAAM,sBACxB,gBAAKC,UAAU,kBAAkBC,IAAKxB,EAAtC,UACE,SAAC,IAAD,CAAWyB,OAAK,EAAhB,SACIpB,GAoBA,SAAC,IAAD,KAnBA,SAAC,IAAD,CAAKkB,UAAU,yBAAf,UACE,UAAC,IAAD,CAAK1B,GAAG,IAAR,WACE,gBAAK0B,UAAU,eAAf,UACE,wBAAKpB,EAAKmB,WAEZ,gBAAKC,UAAU,gBAAf,UACE,gBACEG,IAAKvB,EAAKwB,MACVJ,UAAU,mBACVK,IAAKzB,EAAK0B,KACVC,QAAQ,YAGZ,gBAAKP,UAAU,eAAf,UACE,SAAC,KAAD,CAAYQ,QAAS5B,EAAK6B,YAAaC,QAAQ","sources":["components/loader/Animating/ProductLoading/index.js","pages/ArticlesDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nconst ProductLoading = (props) => (\r\n  <Row>\r\n    <Col lg=\"5\">\r\n      <Skeleton.Image />\r\n    </Col>\r\n    <Col lg=\"7\">\r\n      <Skeleton paragraph={{ rows: 6 }} />\r\n    </Col>\r\n  </Row>\r\n);\r\nexport default ProductLoading;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Interweave from \"interweave\";\r\n\r\n// Core components\r\nimport HeaderBreadcrumb from \"../components/BreadCrumb\";\r\nimport WrapContainer from \"../components/container\";\r\n// APi\r\nimport Dataservices from \"../services/requestApi\";\r\nimport ProductLoading from \"../components/loader/Animating/ProductLoading\";\r\nconst ArticlesDetails = (props) => {\r\n  const mainContent = useRef(null);\r\n  const [data, setData] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n  let { id } = useParams();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setReady(true);\r\n      try {\r\n        const res = await Dataservices.GetArticleById(id);\r\n        setData(res.data.data);\r\n\r\n        setReady(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      getData();\r\n    };\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n  return (\r\n    <WrapContainer>\r\n      <HeaderBreadcrumb title=\"Articles details\" />\r\n      <div className=\"product_details\" ref={mainContent}>\r\n        <Container fluid>\r\n          {!ready ? (\r\n            <Row className=\"justify-content-center\">\r\n              <Col lg=\"7\">\r\n                <div className=\"product_desc\">\r\n                  <h1>{data.title}</h1>\r\n                </div>\r\n                <div className=\"product_thumb\">\r\n                  <img\r\n                    src={data.image}\r\n                    className=\"img-fluid shadow\"\r\n                    alt={data.name}\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n                <div className=\"product_desc\">\r\n                  <Interweave content={data.description} tagName=\"p\" />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <ProductLoading />\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </WrapContainer>\r\n  );\r\n};\r\nexport default ArticlesDetails;\r\n"],"names":["props","lg","paragraph","rows","mainContent","useRef","useState","data","setData","ready","setReady","id","useParams","location","useLocation","useEffect","getData","Dataservices","res","console","log","document","documentElement","scrollTop","scrollingElement","current","title","className","ref","fluid","src","image","alt","name","loading","content","description","tagName"],"sourceRoot":""}