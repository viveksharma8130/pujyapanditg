{"version":3,"file":"static/js/147.9b503f7d.chunk.js","mappings":"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","sources":["components/loader/Animating/ProductLoading/index.js","components/MasterCardDetailsPayment/OrderDetails.js","components/Modal/index.js","components/loader/Loader.js","components/MasterCardDetailsPayment/index.js","pages/PoojaDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nconst ProductLoading = (props) => (\r\n  <Row>\r\n    <Col lg=\"5\">\r\n      <Skeleton.Image />\r\n    </Col>\r\n    <Col lg=\"7\">\r\n      <Skeleton paragraph={{ rows: 6 }} />\r\n    </Col>\r\n  </Row>\r\n);\r\nexport default ProductLoading;\r\n","import React from \"react\";\r\nimport { Modal, Result } from \"antd\";\r\nconst DisplayOrderDetails = ({ visible, paymentid, ordername }) => (\r\n  <Modal\r\n    visible={visible}\r\n    okText=\"Ok\"\r\n    destroyOnClose\r\n    footer={false}\r\n    centered\r\n    onCancel={() => window.location.reload(true)}\r\n    width=\"600px\"\r\n  >\r\n    <Result\r\n      status=\"success\"\r\n      title={`Successfully Purchased ${ordername}`}\r\n      subTitle={`Your Order number: ${paymentid}`}\r\n    />\r\n  </Modal>\r\n);\r\nexport default DisplayOrderDetails;\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport Interweave from \"interweave\";\r\nconst DummyModal = ({\r\n  visible,\r\n  children,\r\n  title,\r\n  rules,\r\n  handlemodal,\r\n  width,\r\n  hidefooter,\r\n  closable,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      centered\r\n      visible={visible}\r\n      width={width ? width : \"100%\"}\r\n      destroyOnClose\r\n      onOk={(e) => handlemodal(e, false)}\r\n      onCancel={(e) => handlemodal(e, false)}\r\n      cancelButtonProps={{ hidden: true }}\r\n      footer={hidefooter}\r\n      closable={closable ? false : true}\r\n      maskClosable={closable ? false : true}\r\n    >\r\n      {rules && <Interweave content={rules} />}\r\n      {children}\r\n    </Modal>\r\n  );\r\n};\r\nexport default DummyModal;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst Loader = ({ show }) => {\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div className=\"loader\">\r\n          <Spinner color=\"light\" />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Loader;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\n// ReactStrap\r\nimport { Button, Col, Input, FormGroup, Row, Form } from \"reactstrap\";\r\n// Antd\r\nimport { DatePicker, Popconfirm } from \"antd\";\r\n\r\n// Moment\r\nimport moment from \"moment\";\r\n\r\n// Api\r\nimport Dataservices from \"../../services/requestApi\";\r\nimport queryString from \"query-string\";\r\n// Core Component\r\nimport DisplayOrderDetails from \"./OrderDetails\";\r\nimport DummyModal from \"../../components/Modal\";\r\n// React router\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../loader/Loader\";\r\n\r\nconst MasterCardPayment = ({\r\n  material,\r\n  price,\r\n  samagriprice,\r\n  samagristatus,\r\n  packageid,\r\n  packagedata,\r\n}) => {\r\n  const AuthToken = sessionStorage.getItem(\"Authtoken\");\r\n  const [user, setUser] = useState([]);\r\n  const [orderdisplay, setOrderDisplay] = useState(false);\r\n  const [paymentid, setPaymentId] = useState(\"\");\r\n  const [ready, setReady] = useState(false);\r\n  const [alternatephone, setAlternatePhone] = useState(\"\");\r\n  const [puja_date, setPujaDate] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [mounted, setMounted] = useState(true);\r\n  const history = useHistory();\r\n  const getUserData = useCallback(async () => {\r\n    try {\r\n      if (AuthToken) {\r\n        const userdata = await Dataservices.GetProfileData();\r\n        if (mounted) {\r\n          // console.log(JSON.parse(AuthToken.data));\r\n          setUser(userdata.data.data);\r\n        }\r\n        // setDepositPrice(\"\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [AuthToken, mounted]);\r\n  useEffect(() => {\r\n    getUserData();\r\n    return () => {\r\n      getUserData();\r\n      setMounted(false);\r\n    };\r\n  }, [getUserData]);\r\n\r\n  // Load script in dom\r\n  function loadScript(src) {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  }\r\n\r\n  // Payment gateway\r\n  const razorPayPaymentHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setReady(true);\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n    const puja_amount = samagristatus\r\n      ? parseInt(price) + parseInt(samagriprice)\r\n      : price;\r\n    const Data = {\r\n      currency: \"INR\",\r\n      receipt: material.name,\r\n      payment_capture: 1,\r\n      amount: puja_amount,\r\n    };\r\n    const response = await Dataservices.PurchaseItem(\r\n      queryString.stringify(Data)\r\n    );\r\n\r\n    const { data } = response;\r\n    const options = {\r\n      key: \"rzp_test_lTf2h44v9i9IK2\",\r\n      name: material.name,\r\n      description: \"Pooja Booking\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        contact: user.phone,\r\n        email: user.email,\r\n        name: user.name,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const paymentId = response.razorpay_payment_id;\r\n          const result = await Dataservices.FetchPayment(paymentId);\r\n          const successObj = JSON.parse(result.data);\r\n          console.log(successObj);\r\n          const payment_data = JSON.stringify({\r\n            id: successObj.id,\r\n            payment_id: paymentId,\r\n            amount: successObj.amount / 100,\r\n          });\r\n\r\n          let pujaData = material;\r\n          pujaData.package_data = packagedata;\r\n          // console.log(\"captured\", successObj);\r\n          if (successObj.status === \"captured\") {\r\n            const Data = {\r\n              user: user,\r\n              puja_id: material._id,\r\n              package_id: packageid,\r\n              puja_amount: puja_amount,\r\n              samagri_status: samagristatus,\r\n              samagri_amount: samagriprice,\r\n              amount: price,\r\n              puja_data: JSON.stringify(pujaData),\r\n              payment_id: paymentId,\r\n              payment_data: payment_data,\r\n              puja_date,\r\n              contact_name: name,\r\n              contact_address: address,\r\n              contact_phone: alternatephone,\r\n              status: \"success\",\r\n            };\r\n            console.log(Data);\r\n            const pujares = await Dataservices.BookPooja(\r\n              queryString.stringify(Data)\r\n            );\r\n            console.log(pujares.data);\r\n            if (pujares.data.status_code === 200) {\r\n              setTimeout(() => {\r\n                setReady(false);\r\n                setPaymentId(paymentId);\r\n                setOrderDisplay(true);\r\n              }, 3000);\r\n            }\r\n            return null;\r\n          } else {\r\n            alert(\"Your Transaction Failed\");\r\n            setReady(false);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#e9963e\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  // Check user login or not\r\n  const AuthentiCate = () => {\r\n    return (\r\n      <>\r\n        {AuthToken ? (\r\n          <>\r\n            <Button\r\n              color=\"amber\"\r\n              className=\"btn-rounded shadow\"\r\n              onClick={handleModal}\r\n            >\r\n              Book Pooja\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Popconfirm\r\n            title=\"Before this You have to login First !\"\r\n            okText=\"Login\"\r\n            placement=\"bottomLeft\"\r\n            onConfirm={() => history.push(\"/login\")}\r\n          >\r\n            <Button color=\"amber\" className=\"btn-rounded shadow\">\r\n              Book Pooja\r\n            </Button>\r\n          </Popconfirm>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setVisible(!visible);\r\n  };\r\n  const onHandleDate = (date, dateString) => {\r\n    setPujaDate(dateString);\r\n    console.log(dateString);\r\n  };\r\n  return (\r\n    <>\r\n      {!material.order_status ? (\r\n        <AuthentiCate />\r\n      ) : (\r\n        <>\r\n          <i className=\"far fa-calendar-alt mr-1\" /> Valid Till :{\" \"}\r\n          {material.order_data &&\r\n            moment(material.order_data[0].to_date).format(\"ll\")}\r\n        </>\r\n      )}\r\n      <DisplayOrderDetails\r\n        visible={orderdisplay}\r\n        paymentid={paymentid}\r\n        ordername={material.name}\r\n      />\r\n      <Loader show={ready} />\r\n      <DummyModal\r\n        visible={visible}\r\n        width=\"650px\"\r\n        title=\"Enter Your address before purchase this\"\r\n        hidefooter={null}\r\n        handlemodal={handleModal}\r\n      >\r\n        <Form onSubmit={razorPayPaymentHandler}>\r\n          <Row className=\"justify-content-end\">\r\n            <Col lg=\"6\">\r\n              <FormGroup>\r\n                <label className=\"form-control-label\" htmlFor=\"address\">\r\n                  Name\r\n                </label>\r\n                <Input\r\n                  className=\"form-control-alternative\"\r\n                  id=\"address\"\r\n                  placeholder=\"Enter your name\"\r\n                  value={name}\r\n                  type=\"text\"\r\n                  required\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n              <FormGroup>\r\n                <label className=\"form-control-label\" htmlFor=\"address\">\r\n                  Phone Number\r\n                </label>\r\n                <Input\r\n                  className=\"form-control-alternative\"\r\n                  id=\"address\"\r\n                  placeholder=\"Alternate Number\"\r\n                  value={alternatephone}\r\n                  type=\"text\"\r\n                  required\r\n                  onChange={(e) => setAlternatePhone(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col lg=\"12\">\r\n              <FormGroup>\r\n                <label className=\"form-control-label d-block\" htmlFor=\"address\">\r\n                  Select Pooja Date\r\n                </label>\r\n                <DatePicker onChange={onHandleDate} className=\"w-100\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col lg=\"12\">\r\n              <FormGroup>\r\n                <label className=\"form-control-label\" htmlFor=\"address\">\r\n                  Address\r\n                </label>\r\n                <Input\r\n                  className=\"form-control-alternative\"\r\n                  id=\"address\"\r\n                  placeholder=\"City/Area/Locatlity\"\r\n                  value={address}\r\n                  type=\"textarea\"\r\n                  rows=\"5\"\r\n                  required\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col lg=\"4\">\r\n              <FormGroup className=\"mb-0\">\r\n                <Button\r\n                  className=\"py-2 btn-rounded text-white\"\r\n                  color=\"amber\"\r\n                  type=\"submit\"\r\n                  block\r\n                >\r\n                  Continue to proceed\r\n                </Button>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </DummyModal>\r\n    </>\r\n  );\r\n};\r\nexport default MasterCardPayment;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Interweave from \"interweave\";\r\nimport { Radio, Tabs } from \"antd\";\r\n\r\n// Core components\r\nimport HeaderBreadcrumb from \"../components/BreadCrumb\";\r\nimport WrapContainer from \"../components/container\";\r\n// APi\r\nimport Dataservices from \"../services/requestApi\";\r\nimport ProductLoading from \"../components/loader/Animating/ProductLoading\";\r\nimport MasterCardPayment from \"../components/MasterCardDetailsPayment\";\r\nconst PoojaDetails = (props) => {\r\n  const mainContent = useRef(null);\r\n  const [data, setData] = useState([]);\r\n  const [packages, setPackages] = useState([]);\r\n  const [packagesList, setPackagesList] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [samagri_price, setSamagriPrice] = useState(\"\");\r\n  const [samagri_status, setSamagriStatus] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [packageid, setPackageId] = useState(\"\");\r\n  const [packagedata, setPackageData] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n  const [mounted, setMounted] = useState(true);\r\n  let { id } = useParams();\r\n  const location = useLocation();\r\n  const { TabPane } = Tabs;\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setReady(true);\r\n      try {\r\n        const [resPooja, resPackages] = await Promise.all([\r\n          Dataservices.GetPoojaById(id),\r\n          Dataservices.GetPoojaPackagesByPoojaId(id),\r\n        ]);\r\n        if (mounted) {\r\n          setData(resPooja.data.data);\r\n          setPackages(resPackages.data.data);\r\n          if (resPooja.data.data.package_type === \"multiple\") {\r\n            const list = [];\r\n            const datas = resPackages.data.data;\r\n            const price = datas[0].price;\r\n            const samagriprice = datas[0].samagri_price;\r\n            const packageid = datas[0]._id;\r\n            setPackageData(datas[0]);\r\n            setPrice(price);\r\n            setSamagriPrice(samagriprice);\r\n            setPackageId(packageid);\r\n            setValue(datas[0].title);\r\n            for (let item of datas) {\r\n              list.push({ label: item.title, value: item.title });\r\n            }\r\n            setPackagesList(list);\r\n          } else {\r\n            setPrice(resPooja.data.data.price);\r\n            setPackageId(resPooja.data.data._id);\r\n            setSamagriPrice(resPooja.data.data.samagri_price);\r\n          }\r\n          setReady(false);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      getData();\r\n      setMounted(false);\r\n    };\r\n  }, [id, mounted]);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n\r\n  const onChangeFilter = (e) => {\r\n    const value = e.target.value;\r\n    setValue(value);\r\n    const data = packages;\r\n    const final = data.find((item) => item.title === value);\r\n    // console.log(final);\r\n    if (final) {\r\n      console.log(final);\r\n      setPackageData(final);\r\n      setPackageId(final._id);\r\n      setPrice(final.price);\r\n      setSamagriPrice(final.samagri_price);\r\n    }\r\n  };\r\n\r\n  const onChangeSamagri = () => {\r\n    setSamagriStatus(!samagri_status);\r\n  };\r\n\r\n  return (\r\n    <WrapContainer>\r\n      <HeaderBreadcrumb title=\"Pooja details\" />\r\n      <div className=\"product_details\" ref={mainContent}>\r\n        <Container fluid>\r\n          {!ready ? (\r\n            <Row>\r\n              <Col lg=\"5\">\r\n                <div className=\"product_thumb\">\r\n                  <img\r\n                    src={data.image}\r\n                    className=\"img-fluid shadow\"\r\n                    alt={data.name}\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"7\">\r\n                <div className=\"product_desc\">\r\n                  <h1>{data.name}</h1>\r\n                  <Interweave content={data.short_description} tagName=\"p\" />\r\n\r\n                  <div className=\"product_prices\">\r\n                    <h3>₹ {price}</h3>\r\n                  </div>\r\n                  {data.package_type === \"multiple\" && (\r\n                    <div className=\"variants\">\r\n                      <h5>Select Packages</h5>\r\n                      <Radio.Group\r\n                        options={packagesList}\r\n                        value={value}\r\n                        optionType=\"button\"\r\n                        buttonStyle=\"solid\"\r\n                        onChange={onChangeFilter}\r\n                        className=\"size\"\r\n                      />\r\n                      <div className=\"variants_samagri\">\r\n                        <h5>Samagri Price</h5>\r\n\r\n                        <div\r\n                          className={`pricediv ${samagri_status && \"active\"}`}\r\n                          onClick={onChangeSamagri}\r\n                        >\r\n                          ₹ {samagri_price}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <MasterCardPayment\r\n                    material={data}\r\n                    price={price}\r\n                    samagriprice={samagri_price}\r\n                    samagristatus={samagri_status}\r\n                    packageid={packageid}\r\n                    packagedata={packagedata}\r\n                  />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col lg=\"12\">\r\n                <div className=\"more_desc\">\r\n                  <Tabs defaultActiveKey=\"1\" centered>\r\n                    <TabPane tab=\"Description\" key=\"1\">\r\n                      <Interweave content={data.description} tagName=\"div\" />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Review\" key=\"2\">\r\n                      Content of Tab Pane 2\r\n                    </TabPane>\r\n                  </Tabs>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <ProductLoading />\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </WrapContainer>\r\n  );\r\n};\r\nexport default PoojaDetails;\r\n"],"names":["props","lg","paragraph","rows","visible","paymentid","ordername","okText","destroyOnClose","footer","centered","onCancel","window","location","reload","width","status","title","subTitle","children","rules","handlemodal","hidefooter","closable","onOk","e","cancelButtonProps","hidden","maskClosable","content","show","className","Spinner","color","material","price","samagriprice","samagristatus","packageid","packagedata","AuthToken","sessionStorage","getItem","useState","user","setUser","orderdisplay","setOrderDisplay","setPaymentId","ready","setReady","alternatephone","setAlternatePhone","puja_date","setPujaDate","address","setAddress","name","setName","setVisible","mounted","setMounted","history","useHistory","getUserData","useCallback","Dataservices","userdata","data","console","log","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","useEffect","razorPayPaymentHandler","preventDefault","alert","puja_amount","parseInt","Data","currency","receipt","payment_capture","amount","queryString","response","options","key","description","order_id","id","prefill","contact","phone","email","handler","paymentId","razorpay_payment_id","result","successObj","JSON","parse","payment_data","stringify","payment_id","pujaData","package_data","puja_id","_id","package_id","samagri_status","samagri_amount","puja_data","contact_name","contact_address","contact_phone","pujares","status_code","setTimeout","theme","Razorpay","open","AuthentiCate","Button","onClick","handleModal","placement","onConfirm","push","order_status","order_data","moment","to_date","format","Form","onSubmit","Row","Col","FormGroup","htmlFor","Input","placeholder","value","type","required","onChange","target","date","dateString","block","mainContent","useRef","setData","packages","setPackages","packagesList","setPackagesList","setPrice","samagri_price","setSamagriPrice","setSamagriStatus","setValue","setPackageId","setPackageData","useParams","useLocation","TabPane","Tabs","getData","all","resPooja","resPackages","package_type","list","datas","item","label","documentElement","scrollTop","scrollingElement","current","ref","Container","fluid","ProductLoading","image","alt","loading","short_description","tagName","optionType","buttonStyle","final","find","defaultActiveKey","tab"],"sourceRoot":""}