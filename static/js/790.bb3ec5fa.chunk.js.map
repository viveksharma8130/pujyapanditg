{"version":3,"file":"static/js/790.bb3ec5fa.chunk.js","mappings":"kKAcA,IAVuB,SAACA,GAAD,OACrB,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAG,IAAR,UACE,SAAC,UAAD,OAEF,SAAC,IAAD,CAAKA,GAAG,IAAR,UACE,SAAC,IAAD,CAAUC,UAAW,CAAEC,KAAM,Y,iNCuGnC,UArGuB,SAACH,GACtB,IAAMI,GAAcC,EAAAA,EAAAA,QAAO,MAC3B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA4CJ,EAAAA,EAAAA,UAAS,IAArD,eAAOK,EAAP,KACA,GADA,MAC0BL,EAAAA,EAAAA,WAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACMC,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAAWC,EAAAA,EAAAA,MACTC,EAAYC,EAAAA,EAAAA,SACpBC,EAAAA,EAAAA,YAAU,WACRP,GAAS,GACT,IAAMQ,EAAO,mCAAG,qIAEMC,EAAAA,EAAAA,eAA4BR,GAFlC,OAMZ,IAJMS,EAFM,OAGNC,EAASD,EAAIhB,KAAKA,KAClBkB,EAAUC,KAAKC,MAAMH,EAAOC,SAClCjB,EAAQgB,GACR,MAAyBI,OAAOC,QAAQJ,GAAxC,eAAkD,CAEhD,IAFiD,GAAD,oBAAnCK,EAAmC,KAC1CvB,EAAO,GACb,MAA8BqB,OAAOC,QAAQC,GAA7C,eAAsD,GAAD,eAAzCC,EAAyC,KAAlCC,EAAkC,KACnDzB,EAAK0B,KAAKF,EAAOC,GAEnBE,QAAQC,IAAI5B,GAEdM,GAAS,GAbG,kDAeZqB,QAAQC,IAAR,MAfY,0DAAH,qDAmBb,OADAd,IACO,WACLA,OAED,CAACP,KAEJM,EAAAA,EAAAA,YAAU,WACRgB,SAASC,gBAAgBC,UAAY,EACrCF,SAASG,iBAAiBD,UAAY,EACtClC,EAAYoC,QAAQF,UAAY,IAC/B,CAACtB,IAKJ,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAkBe,MAAM,qBACxB,gBAAKU,UAAU,kBAAkBC,IAAKtC,EAAtC,UACE,SAAC,IAAD,CAAWuC,OAAK,EAAhB,SACI/B,GA6CA,SAAC,IAAD,KA5CA,UAAC,IAAD,YACE,SAAC,IAAD,CAAKX,GAAG,IAAR,UACE,gBAAKwC,UAAU,gBAAf,UACE,gBACEG,IAAKrC,EAAKsC,MACVJ,UAAU,mBACVK,IAAKvC,EAAKwC,KACVC,QAAQ,cAId,SAAC,IAAD,CAAK/C,GAAG,IAAR,UACE,iBAAKwC,UAAU,eAAf,WACE,wBAAKlC,EAAKwC,QACV,SAAC,KAAD,CAAYE,QAAS1C,EAAK2C,kBAAmBC,QAAQ,OACrD,gBAAKV,UAAU,WAAf,UACE,SAAC,WAAD,CACEW,QAASzC,EACT0C,SA5BF,SAACC,GACjBpB,QAAQC,IAAI,iBAAkBmB,EAAEC,OAAOzB,OACvCpB,EAAgB4C,EAAEC,OAAOzB,QA2BPA,MAAOrB,EACP+C,WAAW,SACXC,YAAY,aAGhB,SAAC,IAAD,CAAQC,MAAM,QAAQjB,UAAU,qBAAhC,+BAMJ,SAAC,IAAD,CAAKxC,GAAG,KAAR,UACE,gBAAKwC,UAAU,YAAf,UACE,UAAC,IAAD,CAAMkB,iBAAiB,IAAIC,UAAQ,EAAnC,WACE,SAAC1C,EAAD,CAAS2C,IAAI,cAAb,UACE,SAAC,KAAD,CAAYZ,QAAS1C,EAAKuD,YAAaX,QAAQ,SADlB,MAG/B,SAACjC,EAAD,CAAS2C,IAAI,SAAb,kCAA0B","sources":["components/loader/Animating/ProductLoading/index.js","pages/ProductDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nconst ProductLoading = (props) => (\r\n  <Row>\r\n    <Col lg=\"5\">\r\n      <Skeleton.Image />\r\n    </Col>\r\n    <Col lg=\"7\">\r\n      <Skeleton paragraph={{ rows: 6 }} />\r\n    </Col>\r\n  </Row>\r\n);\r\nexport default ProductLoading;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport Interweave from \"interweave\";\r\nimport { Tabs, Radio } from \"antd\";\r\n\r\n// Core components\r\nimport HeaderBreadcrumb from \"../components/BreadCrumb\";\r\nimport WrapContainer from \"../components/container\";\r\n// APi\r\nimport Dataservices from \"../services/requestApi\";\r\nimport ProductLoading from \"../components/loader/Animating/ProductLoading\";\r\nconst ProductDetails = (props) => {\r\n  const mainContent = useRef(null);\r\n  const [data, setData] = useState([]);\r\n  const [variantValue, setVariantValue] = useState(\"\");\r\n  const [variantOptions, setVariantOptions] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n  let { id } = useParams();\r\n  const location = useLocation();\r\n  const { TabPane } = Tabs;\r\n  useEffect(() => {\r\n    setReady(true);\r\n    const getData = async () => {\r\n      try {\r\n        const res = await Dataservices.GetProductById(id);\r\n        const result = res.data.data;\r\n        const variant = JSON.parse(result.variant);\r\n        setData(result);\r\n        for (let [key, value] of Object.entries(variant)) {\r\n          const data = [];\r\n          for (const [title, values] of Object.entries(value)) {\r\n            data.push(title, values);\r\n          }\r\n          console.log(data);\r\n        }\r\n        setReady(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      getData();\r\n    };\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n  const onChange4 = (e) => {\r\n    console.log(\"radio4 checked\", e.target.value);\r\n    setVariantValue(e.target.value);\r\n  };\r\n  return (\r\n    <WrapContainer>\r\n      <HeaderBreadcrumb title=\"Product details\" />\r\n      <div className=\"product_details\" ref={mainContent}>\r\n        <Container fluid>\r\n          {!ready ? (\r\n            <Row>\r\n              <Col lg=\"5\">\r\n                <div className=\"product_thumb\">\r\n                  <img\r\n                    src={data.image}\r\n                    className=\"img-fluid shadow\"\r\n                    alt={data.name}\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"7\">\r\n                <div className=\"product_desc\">\r\n                  <h1>{data.name}</h1>\r\n                  <Interweave content={data.short_description} tagName=\"p\" />\r\n                  <div className=\"variants\">\r\n                    <Radio.Group\r\n                      options={variantOptions}\r\n                      onChange={onChange4}\r\n                      value={variantValue}\r\n                      optionType=\"button\"\r\n                      buttonStyle=\"solid\"\r\n                    />\r\n                  </div>\r\n                  <Button color=\"amber\" className=\"btn-rounded shadow\">\r\n                    Add to Cart\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              <Col lg=\"12\">\r\n                <div className=\"more_desc\">\r\n                  <Tabs defaultActiveKey=\"1\" centered>\r\n                    <TabPane tab=\"Description\" key=\"1\">\r\n                      <Interweave content={data.description} tagName=\"div\" />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Review\" key=\"2\">\r\n                      Content of Tab Pane 2\r\n                    </TabPane>\r\n                  </Tabs>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <ProductLoading />\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </WrapContainer>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n"],"names":["props","lg","paragraph","rows","mainContent","useRef","useState","data","setData","variantValue","setVariantValue","variantOptions","ready","setReady","id","useParams","location","useLocation","TabPane","Tabs","useEffect","getData","Dataservices","res","result","variant","JSON","parse","Object","entries","value","title","values","push","console","log","document","documentElement","scrollTop","scrollingElement","current","className","ref","fluid","src","image","alt","name","loading","content","short_description","tagName","options","onChange","e","target","optionType","buttonStyle","color","defaultActiveKey","centered","tab","description"],"sourceRoot":""}